from logger import *
import time

class DelayedResponseExploit():
	"""
	Implements the concrete delayed response exploit
	strategy.  

	If the response takes longer than the 
	pre-defined threshold, log it.
	"""

	DELAY_THRESHOLD = 100	# Threshold above which vector is reported

	def execute(self, pages, session, strategy):
		"""
		execute strategy
		"""
		DELAY_THRESHOLD = 100
		curr_vector = "yoyo man"

		logger.info("Sending requests to vectors and checking for delayed responses...")

		for page in pages:

			# Time vector response time
			start_time = time.time()
			#this._executeVector(vector,page)
			end_time = time.time()
			total_time = start_time-end_time

			if total_time > DELAY_THRESHOLD :
				logger.info("Delayed Response - \n  Page: %s\n  Vector: %s\n  Time: %s\n" % (page['url'],curr_vector,total_time) )