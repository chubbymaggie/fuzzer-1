class SensitiveDataExploit():
	"""
	implements the concrete sensitive data exploit
	strategy
	"""

	def execute(self, pages, session, strategy):
		"""
		execute strategy - fuzz all inputs and make sure 
		they have been sanitized
		"""
		vectors = strategy._getVectors()

		for page in pages:
			forms = page.get("inputs").get("forms")
			url = page.get("url")
			
			for form in forms:
				for vector in vectors:
					response = strategy._executeVector(url, vector, form)

					if response != None:
						self._checkForSensitiveData(vector,response)

	def _checkForSensitiveData(self, vector, response):
		""" 
		check that response has been sanitized. 
		@vector - vector executed
		@response - the response given
		"""
		pass