class ExploitStrategy:
  """
  Implements the Strategy Pattern for exploits.

  Justification: exploits are very similar and only differ in their behvior. 
  Using the strategy pattern, we can configure just one class with one of many 
  behaviors

  Example usage:

  sanitization = Exploit({type of exploit}, [pages to fuzz])
  sanitization.execute()
  """

  def __init__(self, pages, concrete_exploit):
    """
    constructor
    """
    self.concrete_exploit = concrete_exploit
    self.pages = pages

  def execute(self):
    self.concrete_exploit.execute(self.pages,self)

  def _getVectors(self):
    return "Hi"

  def _executeVector(vector, page):
    """
    @private
    """
    raise NotImplementedError("Not implemented")
